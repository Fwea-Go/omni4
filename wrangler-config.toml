name = "omnibackend2"
main = "src/worker.js"
compatibility_date = "2024-09-23"
compatibility_flags = ["nodejs_compat"]
usage_model = "unbound"
workers_dev = true

[vars]
FRONTEND_URL = "https://fwea-i.com"
WORKER_BASE_URL = "https://omnibackend2.fweago-flavaz.workers.dev"
ENCODER_URL = "http://178.156.190.229:3000"
STRIPE_PRICE_SINGLE = "price_1S4NnmJ2Iq1764pCjA9xMnrn"
STRIPE_PRICE_DAYPASS = "price_1S4NstJ2Iq1764pCCbrru0Aao"
STRIPE_PRICE_STUDIO = "price_1S4Nr3J2Iq1764pCzHY4zIWt"
STRIPE_PRICE_DJPRO  = "price_1S4NpzJ2Iq1764pCcZlSuhug"

[assets]
directory = "./public"

# --- Cloudflare AI binding
[ai]
binding = "AI"

# --- R2 storage
[[r2_buckets]]
binding = "AUDIO_STORAGE"
bucket_name = "fwea-audio-storage"

# --- KV namespace
[[kv_namespaces]]
binding = "PROFANITY_LISTS"
id = "6a64a5d1cb7b4ac5bcaefaec65129a66"

# --- D1 database
[[d1_databases]]
binding = "DB"
database_name = "fwea-database"
database_id = "e86cdc5e-9076-4076-a4e9-9f05591c3119"

# --- Durable Object
[durable_objects]
bindings = [
  { name = "PROCESSING_STATE", class_name = "ProcessingStateV2" }
]

# --- Queues
[[queues.producers]]
binding = "TRANSCODE_QUEUE"
queue = "audio-transcoding-queue"

# Queue consumer disabled for now. Reâ€‘enable only if you deploy a separate
# background transcoder Worker with a `queue` handler.

[observability]
enabled = true
head_sampling_rate = 1.0

[build]
command = "echo 'No build step required'"

[env.production]
name = "omnibackend2"
vars = { FRONTEND_URL = "https://fwea-i.com", WORKER_BASE_URL = "https://omnibackend2.fweago-flavaz.workers.dev", ENCODER_URL = "http://178.156.190.229:3000", STRIPE_PRICE_SINGLE = "price_1S4NnmJ2Iq1764pCjA9xMnrn", STRIPE_PRICE_DAYPASS = "price_1S4NstJ2Iq1764pCCbrru0Aao", STRIPE_PRICE_STUDIO = "price_1S4Nr3J2Iq1764pCzHY4zIWt", STRIPE_PRICE_DJPRO = "price_1S4NpzJ2Iq1764pCcZlSuhug" }

[env.staging]
name = "omnibackend2-staging"
vars = { FRONTEND_URL = "https://staging.fwea-i.com", WORKER_BASE_URL = "https://omnibackend2-staging.fweago-flavaz.workers.dev", ENCODER_URL = "http://staging-encoder.example.com", STRIPE_PRICE_SINGLE = "price_staging_single", STRIPE_PRICE_DAYPASS = "price_staging_daypass" }

[env.development]
name = "omnibackend2-dev"
vars = { FRONTEND_URL = "http://localhost:3000", WORKER_BASE_URL = "http://localhost:8787", ENCODER_URL = "http://localhost:3000", STRIPE_PRICE_SINGLE = "price_dev_single", STRIPE_PRICE_DAYPASS = "price_dev_daypass" }

[[migrations]]
tag = "v1"
new_classes = ["ProcessingStateV2"]

keep_vars = true

[placement]
mode = "smart"

[limits]
cpu_ms = 30000

send_metrics = true

[triggers]
crons = ["0 0 * * *"]

# NOTE: TRANSCODER service binding removed to avoid deploy failure
# (code 10141: target script/environment not found). If/when you deploy a
# separate Worker for transcoding, re-add:
# [[services]]
# binding = "TRANSCODER"
# service = "audio-transcoder-service"   # <-- exact Worker name
# environment = "production"              # <-- environment that actually exists
